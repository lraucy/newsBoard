{'CLASSES': {'authorization.clientlogin.ClientLogin': {'bases': [],
                                                       'constructor': [],
                                                       'docstring': '',
                                                       'methods': [('authorize',
                                                                    ['username', 'password'],
                                                                    '')],
                                                       'properties': []},
             'authorization.oauth.OAuth': {'bases': [],
                                           'constructor': [],
                                           'docstring': '',
                                           'methods': [('generateAuthorizationURL',
                                                        ['consumer_key',
                                                         'consumer_secret',
                                                         'domain',
                                                         'callback_url=None'],
                                                        ' Fetch the OAuthToken and generate the authorization URL.\n    Returns:\n      the Authorization URL\n    '),
                                                       ('authorize',
                                                        ['consumer_key',
                                                         'consumer_secret',
                                                         'oauth_token',
                                                         'oauth_token_secret'],
                                                        ' Upgrade OAuth to Access Token\n    Returns:\n      the oauth token\n      the token secret\n    ')],
                                           'properties': []},
             'fileimport.fileimporter.CSVImporter': {'bases': ['fileimport.fileimporter.Importer'],
                                                     'constructor': ['ftclient'],
                                                     'docstring': '',
                                                     'methods': [('importFile',
                                                                  ['filename',
                                                                   'table_name=None',
                                                                   'data_types=None'],
                                                                  ' Creates new table and imports data from CSV file '),
                                                                 ('importMoreRows',
                                                                  ['filename', 'table_id'],
                                                                  ' Imports more rows in a CSV file to an existing table. First row is a header '),
                                                                 ('_importRows',
                                                                  ['filehandle',
                                                                   'table_id',
                                                                   'cols'],
                                                                  ' Helper function to upload rows of data in a CSV file to a table ')],
                                                     'properties': ['ftclient']},
             'fileimport.fileimporter.Importer': {'bases': [],
                                                  'constructor': [],
                                                  'docstring': '',
                                                  'methods': [('importFile', ['filename'], ''),
                                                              ('importMoreRows',
                                                               ['filename'],
                                                               '')],
                                                  'properties': []},
             'ftclient.ClientLoginFTClient': {'bases': ['ftclient.FTClient'],
                                              'constructor': ['token'],
                                              'docstring': '',
                                              'methods': [('_get', ['query'], ''),
                                                          ('_post', ['query'], '')],
                                              'properties': ['auth_token', 'request_url']},
             'ftclient.FTClient': {'bases': [],
                                   'constructor': [],
                                   'docstring': '',
                                   'methods': [('_get', ['query'], ''),
                                               ('_post', ['query'], ''),
                                               ('query',
                                                ['query', 'request_type=None'],
                                                ' Issue a query to the Fusion Tables API and return the result. ')],
                                   'properties': []},
             'ftclient.OAuthFTClient': {'bases': ['ftclient.FTClient'],
                                        'constructor': ['consumer_key',
                                                        'consumer_secret',
                                                        'oauth_token',
                                                        'oauth_token_secret'],
                                        'docstring': '',
                                        'methods': [('_get', ['query'], ''),
                                                    ('_post', ['query'], '')],
                                        'properties': ['consumer_key',
                                                       'consumer_secret',
                                                       'token',
                                                       'scope']},
             'sql.sqlbuilder.SQL': {'bases': [],
                                    'constructor': [],
                                    'docstring': ' Helper class for building SQL queries ',
                                    'methods': [('showTables',
                                                 [],
                                                 ' Build a SHOW TABLES sql statement.\n\n    Returns:\n      the sql statement\n    '),
                                                ('describeTable',
                                                 ['table_id'],
                                                 ' Build a DESCRIBE <tableid> sql statement.\n\n    Args:\n      table_id: the ID of the table to describe\n\n    Returns:\n      the sql statement\n    '),
                                                ('createTable',
                                                 ['table'],
                                                 ' Build a CREATE TABLE sql statement.\n\n    Args:\n      table: a dictionary representing the table. example:\n        {\n          "tablename":\n            {\n            "col_name1":"STRING",\n            "col_name2":"NUMBER",\n            "col_name3":"LOCATION",\n            "col_name4":"DATETIME"\n            }\n        }\n\n    Returns:\n      the sql statement\n    '),
                                                ('select',
                                                 ['table_id', 'cols=None', 'condition=None'],
                                                 ' Build a SELECT sql statement.\n\n    Args:\n      table_id: the id of the table\n      cols: a list of columns to return. If None, return all\n      condition: a statement to add to the WHERE clause. For example,\n        "age > 30" or "Name = \'Steve\'". Use single quotes as per the API.\n\n    Returns:\n      the sql statement\n    '),
                                                ('update',
                                                 ['table_id', 'cols', 'values', 'row_id'],
                                                 ' Build an UPDATE sql statement.\n\n    Args:\n      table_id: the id of the table\n      cols: the columns to update\n      values: the new values\n      row_id: the id of the row to update\n\n    Returns:\n      the sql statement\n    '),
                                                ('delete',
                                                 ['table_id', 'row_id'],
                                                 ' Build DELETE sql statement.\n\n    Args:\n      table_id: the id of the table\n      row_id: the id of the row to delete\n\n    Returns:\n      the sql statement\n    '),
                                                ('insert',
                                                 ['table_id', 'values'],
                                                 ' Build an INSERT sql statement.\n\n    Args:\n      table_id: the id of the table\n      values: dictionary of column to value. Example:\n        {\n        "col_name1":12,\n        "col_name2":"mystring",\n        "col_name3":"Mountain View",\n        "col_name4":"9/10/2010"\n        }\n\n    Returns:\n      the sql statement\n    '),
                                                ('dropTable',
                                                 ['table_id'],
                                                 ' Build DROP TABLE sql statement.\n\n    Args:\n      table_id: the id of the table\n\n    Returns:\n      the sql statement\n    ')],
                                    'properties': []}},
 'CONSTANTS': ['ftclient.__author__',
               'fileimport.fileimporter.__author__',
               'authorization.clientlogin.__author__',
               'authorization.oauth.__author__',
               'authorization.oauth.OAUTH_SETTINGS',
               'sql.sqlbuilder.__author__',
               'clientlogin_example.username',
               'clientlogin_example.password',
               'clientlogin_example.token',
               'clientlogin_example.ft_client',
               'clientlogin_example.results',
               'clientlogin_example.table',
               'clientlogin_example.tableid',
               'clientlogin_example.rowid',
               'clientlogin_example.tableid',
               'oauth_example.consumer_key',
               'oauth_example.consumer_secret',
               'oauth_example.url',
               'oauth_example.token',
               'oauth_example.secret',
               'oauth_example.token',
               'oauth_example.secret',
               'oauth_example.oauth_client',
               'oauth_example.results',
               'oauth_example.table',
               'oauth_example.tableid',
               'oauth_example.rowid',
               'oauth_example.tableid'],
 'FUNCTIONS': [],
 'HIERARCHY': ['test',
               'ftclient',
               'fileimport',
               'fileimport.fileimporter',
               'authorization.clientlogin',
               'authorization.oauth',
               'authorization',
               'sql',
               'sql.sqlbuilder',
               'clientlogin_example',
               'oauth_example'],
 'POINTERS': {'authorization.clientlogin.urllib': 'urllib',
              'authorization.clientlogin.urllib2': 'urllib2',
              'authorization.oauth.oauth2': 'oauth2',
              'authorization.oauth.urllib': 'urllib',
              'clientlogin_example.CSVImporter': 'fileimport.fileimporter.CSVImporter',
              'clientlogin_example.ClientLogin': 'authorization.clientlogin.ClientLogin',
              'clientlogin_example.SQL': 'sql.sqlbuilder.SQL',
              'clientlogin_example.ftclient': 'ftclient',
              'clientlogin_example.getpass': 'getpass',
              'clientlogin_example.sys': 'sys',
              'fileimport.fileimporter.SQL': 'sql.sqlbuilder.SQL',
              'fileimport.fileimporter.csv': 'csv',
              'fileimport.fileimporter.sys': 'sys',
              'fileimport.fileimporter.time': 'time',
              'ftclient.authorization.oauth': 'authorization.oauth',
              'ftclient.oauth2': 'oauth2',
              'ftclient.urllib': 'urllib',
              'ftclient.urllib2': 'urllib2',
              'oauth_example.CSVImporter': 'fileimport.fileimporter.CSVImporter',
              'oauth_example.OAuth': 'authorization.oauth.OAuth',
              'oauth_example.SQL': 'sql.sqlbuilder.SQL',
              'oauth_example.ftclient': 'ftclient',
              'oauth_example.getpass': 'getpass',
              'oauth_example.sys': 'sys',
              'sql.sqlbuilder.re': 're',
              'test.CSVImporter': 'fileimport.fileimporter.CSVImporter',
              'test.ClientLogin': 'authorization.clientlogin.ClientLogin',
              'test.SQL': 'sql.sqlbuilder.SQL',
              'test.ftclient': 'ftclient'}}
